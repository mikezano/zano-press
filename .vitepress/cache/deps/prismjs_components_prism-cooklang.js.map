{
  "version": 3,
  "sources": ["../../../node_modules/prismjs/components/prism-cooklang.js"],
  "sourcesContent": ["(function (Prism) {\n\n\t// see https://github.com/cooklang/spec/blob/main/EBNF.md\n\n\tvar single_token_suffix = /(?:(?!\\s)[\\d$+<=a-zA-Z\\x80-\\uFFFF])+/.source;\n\tvar multi_token_infix = /[^{}@#]+/.source;\n\tvar multi_token_suffix = /\\{[^}#@]*\\}/.source;\n\n\tvar multi_token = multi_token_infix + multi_token_suffix;\n\n\tvar timer_units = /(?:h|hours|hrs|m|min|minutes)/.source;\n\n\tvar amount_group_impl = {\n\t\tpattern: /\\{[^{}]*\\}/,\n\t\tinside: {\n\t\t\t'amount': {\n\t\t\t\tpattern: /([\\{|])[^{}|*%]+/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'number',\n\t\t\t},\n\t\t\t'unit': {\n\t\t\t\tpattern: /(%)[^}]+/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'symbol',\n\t\t\t},\n\t\t\t'servings-scaler': {\n\t\t\t\tpattern: /\\*/,\n\t\t\t\talias: 'operator',\n\t\t\t},\n\t\t\t'servings-alternative-separator': {\n\t\t\t\tpattern: /\\|/,\n\t\t\t\talias: 'operator',\n\t\t\t},\n\t\t\t'unit-separator': {\n\t\t\t\tpattern: /(?:%|(\\*)%)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'operator',\n\t\t\t},\n\t\t\t'punctuation': /[{}]/,\n\t\t}\n\t};\n\n\n\tPrism.languages.cooklang = {\n\t\t'comment': {\n\t\t\t// [- comment -]\n\t\t\t// -- comment\n\t\t\tpattern: /\\[-[\\s\\S]*?-\\]|--.*/,\n\t\t\tgreedy: true,\n\t\t},\n\t\t'meta': { // >> key: value\n\t\t\tpattern: />>.*:.*/,\n\t\t\tinside: {\n\t\t\t\t'property': { // key:\n\t\t\t\t\tpattern: /(>>\\s*)[^\\s:](?:[^:]*[^\\s:])?/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'cookware-group': { // #...{...}, #...\n\t\t\tpattern: new RegExp('#(?:'\n\t\t\t\t+ multi_token\n\t\t\t\t+ '|'\n\t\t\t\t+ single_token_suffix\n\t\t\t\t+ ')'\n\t\t\t),\n\t\t\tinside: {\n\t\t\t\t'cookware': {\n\t\t\t\t\tpattern: new RegExp('(^#)(?:'\n\t\t\t\t\t\t+ multi_token_infix\n\t\t\t\t\t\t+ ')'\n\t\t\t\t\t),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'variable',\n\t\t\t\t},\n\t\t\t\t'cookware-keyword': {\n\t\t\t\t\tpattern: /^#/,\n\t\t\t\t\talias: 'keyword',\n\t\t\t\t},\n\t\t\t\t'quantity-group': {\n\t\t\t\t\tpattern: new RegExp(/\\{[^{}@#]*\\}/),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'quantity': {\n\t\t\t\t\t\t\tpattern: new RegExp(/(^\\{)/.source + multi_token_infix),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: 'number',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /[{}]/,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t'ingredient-group': { // @...{...}, @...\n\t\t\tpattern: new RegExp('@(?:'\n\t\t\t\t+ multi_token\n\t\t\t\t+ '|'\n\t\t\t\t+ single_token_suffix\n\t\t\t\t+ ')'),\n\t\t\tinside: {\n\t\t\t\t'ingredient': {\n\t\t\t\t\tpattern: new RegExp('(^@)(?:'\n\t\t\t\t\t\t+ multi_token_infix\n\t\t\t\t\t\t+ ')'),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'variable',\n\t\t\t\t},\n\t\t\t\t'ingredient-keyword': {\n\t\t\t\t\tpattern: /^@/,\n\t\t\t\t\talias: 'keyword',\n\t\t\t\t},\n\t\t\t\t'amount-group': amount_group_impl,\n\t\t\t}\n\t\t},\n\t\t'timer-group': { // ~timer{...}\n\t\t\t// eslint-disable-next-line regexp/sort-alternatives\n\t\t\tpattern: /~(?!\\s)[^@#~{}]*\\{[^{}]*\\}/,\n\t\t\tinside: {\n\t\t\t\t'timer': {\n\t\t\t\t\tpattern: /(^~)[^{]+/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'variable',\n\t\t\t\t},\n\t\t\t\t'duration-group': { // {...}\n\t\t\t\t\tpattern: /\\{[^{}]*\\}/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /[{}]/,\n\t\t\t\t\t\t'unit': {\n\t\t\t\t\t\t\tpattern: new RegExp(/(%\\s*)/.source + timer_units + /\\b/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: 'symbol',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'operator': /%/,\n\t\t\t\t\t\t'duration': {\n\t\t\t\t\t\t\tpattern: /\\d+/,\n\t\t\t\t\t\t\talias: 'number',\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'timer-keyword': {\n\t\t\t\t\tpattern: /^~/,\n\t\t\t\t\talias: 'keyword',\n\t\t\t\t},\n\t\t\t}\n\t\t}\n\t};\n}(Prism));\n"],
  "mappings": "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",
  "names": ["Prism"]
}
