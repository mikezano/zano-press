{
  "version": 3,
  "sources": ["../../../node_modules/prismjs/components/prism-parser.js"],
  "sourcesContent": ["(function (Prism) {\n\n\tvar parser = Prism.languages.parser = Prism.languages.extend('markup', {\n\t\t'keyword': {\n\t\t\tpattern: /(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'variable': {\n\t\t\tpattern: /(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /\\.|:+/\n\t\t\t}\n\t\t},\n\t\t'function': {\n\t\t\tpattern: /(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^@)(?:GET_|SET_)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'punctuation': /\\.|:+/\n\t\t\t}\n\t\t},\n\t\t'escape': {\n\t\t\tpattern: /\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,\n\t\t\talias: 'builtin'\n\t\t},\n\t\t'punctuation': /[\\[\\](){};]/\n\t});\n\n\tparser = Prism.languages.insertBefore('parser', 'keyword', {\n\t\t'parser-comment': {\n\t\t\tpattern: /(\\s)#.*/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'comment'\n\t\t},\n\t\t'expression': {\n\t\t\t// Allow for 3 levels of depth\n\t\t\tpattern: /(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,\n\t\t\tgreedy: true,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: /(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'keyword': parser.keyword,\n\t\t\t\t'variable': parser.variable,\n\t\t\t\t'function': parser.function,\n\t\t\t\t'boolean': /\\b(?:false|true)\\b/,\n\t\t\t\t'number': /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?)\\b/i,\n\t\t\t\t'escape': parser.escape,\n\t\t\t\t'operator': /[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,\n\t\t\t\t'punctuation': parser.punctuation\n\t\t\t}\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('inside', 'punctuation', {\n\t\t'expression': parser.expression,\n\t\t'keyword': parser.keyword,\n\t\t'variable': parser.variable,\n\t\t'function': parser.function,\n\t\t'escape': parser.escape,\n\t\t'parser-punctuation': {\n\t\t\tpattern: parser.punctuation,\n\t\t\talias: 'punctuation'\n\t\t}\n\t}, parser['tag'].inside['attr-value']);\n\n}(Prism));\n"],
  "mappings": ";CAAC,SAAUA,QAAO;AAEjB,MAAI,SAASA,OAAM,UAAU,SAASA,OAAM,UAAU,OAAO,UAAU;AAAA,IACtE,WAAW;AAAA,MACV,SAAS;AAAA,MACT,YAAY;AAAA,IACb;AAAA,IACA,YAAY;AAAA,MACX,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,QACP,eAAe;AAAA,MAChB;AAAA,IACD;AAAA,IACA,YAAY;AAAA,MACX,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,QACP,WAAW;AAAA,UACV,SAAS;AAAA,UACT,YAAY;AAAA,QACb;AAAA,QACA,eAAe;AAAA,MAChB;AAAA,IACD;AAAA,IACA,UAAU;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA,IACR;AAAA,IACA,eAAe;AAAA,EAChB,CAAC;AAED,WAASA,OAAM,UAAU,aAAa,UAAU,WAAW;AAAA,IAC1D,kBAAkB;AAAA,MACjB,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,OAAO;AAAA,IACR;AAAA,IACA,cAAc;AAAA;AAAA,MAEb,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,QAAQ;AAAA,QACP,UAAU;AAAA,UACT,SAAS;AAAA,UACT,YAAY;AAAA,QACb;AAAA,QACA,WAAW,OAAO;AAAA,QAClB,YAAY,OAAO;AAAA,QACnB,YAAY,OAAO;AAAA,QACnB,WAAW;AAAA,QACX,UAAU;AAAA,QACV,UAAU,OAAO;AAAA,QACjB,YAAY;AAAA,QACZ,eAAe,OAAO;AAAA,MACvB;AAAA,IACD;AAAA,EACD,CAAC;AAED,EAAAA,OAAM,UAAU,aAAa,UAAU,eAAe;AAAA,IACrD,cAAc,OAAO;AAAA,IACrB,WAAW,OAAO;AAAA,IAClB,YAAY,OAAO;AAAA,IACnB,YAAY,OAAO;AAAA,IACnB,UAAU,OAAO;AAAA,IACjB,sBAAsB;AAAA,MACrB,SAAS,OAAO;AAAA,MAChB,OAAO;AAAA,IACR;AAAA,EACD,GAAG,OAAO,KAAK,EAAE,OAAO,YAAY,CAAC;AAEtC,GAAE,KAAK;",
  "names": ["Prism"]
}
