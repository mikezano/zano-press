{
  "version": 3,
  "sources": ["../../../node_modules/prismjs/components/prism-dot.js"],
  "sourcesContent": ["// https://www.graphviz.org/doc/info/lang.html\n\n(function (Prism) {\n\n\tvar ID = '(?:' + [\n\t\t// an identifier\n\t\t/[a-zA-Z_\\x80-\\uFFFF][\\w\\x80-\\uFFFF]*/.source,\n\t\t// a number\n\t\t/-?(?:\\.\\d+|\\d+(?:\\.\\d*)?)/.source,\n\t\t// a double-quoted string\n\t\t/\"[^\"\\\\]*(?:\\\\[\\s\\S][^\"\\\\]*)*\"/.source,\n\t\t// HTML-like string\n\t\t/<(?:[^<>]|(?!<!--)<(?:[^<>\"']|\"[^\"]*\"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/.source\n\t].join('|') + ')';\n\n\tvar IDInside = {\n\t\t'markup': {\n\t\t\tpattern: /(^<)[\\s\\S]+(?=>$)/,\n\t\t\tlookbehind: true,\n\t\t\talias: ['language-markup', 'language-html', 'language-xml'],\n\t\t\tinside: Prism.languages.markup\n\t\t}\n\t};\n\n\t/**\n\t * @param {string} source\n\t * @param {string} flags\n\t * @returns {RegExp}\n\t */\n\tfunction withID(source, flags) {\n\t\treturn RegExp(source.replace(/<ID>/g, function () { return ID; }), flags);\n\t}\n\n\tPrism.languages.dot = {\n\t\t'comment': {\n\t\t\tpattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|^#.*/m,\n\t\t\tgreedy: true\n\t\t},\n\t\t'graph-name': {\n\t\t\tpattern: withID(/(\\b(?:digraph|graph|subgraph)[ \\t\\r\\n]+)<ID>/.source, 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\talias: 'class-name',\n\t\t\tinside: IDInside\n\t\t},\n\t\t'attr-value': {\n\t\t\tpattern: withID(/(=[ \\t\\r\\n]*)<ID>/.source),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: IDInside\n\t\t},\n\t\t'attr-name': {\n\t\t\tpattern: withID(/([\\[;, \\t\\r\\n])<ID>(?=[ \\t\\r\\n]*=)/.source),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: IDInside\n\t\t},\n\t\t'keyword': /\\b(?:digraph|edge|graph|node|strict|subgraph)\\b/i,\n\t\t'compass-point': {\n\t\t\tpattern: /(:[ \\t\\r\\n]*)(?:[ewc_]|[ns][ew]?)(?![\\w\\x80-\\uFFFF])/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'builtin'\n\t\t},\n\t\t'node': {\n\t\t\tpattern: withID(/(^|[^-.\\w\\x80-\\uFFFF\\\\])<ID>/.source),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: IDInside\n\t\t},\n\t\t'operator': /[=:]|-[->]/,\n\t\t'punctuation': /[\\[\\]{};,]/\n\t};\n\n\tPrism.languages.gv = Prism.languages.dot;\n\n}(Prism));\n"],
  "mappings": ";CAEC,SAAUA,QAAO;AAEjB,MAAI,KAAK,QAAQ;AAAA;AAAA,IAEhB,uCAAuC;AAAA;AAAA,IAEvC,4BAA4B;AAAA;AAAA,IAE5B,gCAAgC;AAAA;AAAA,IAEhC,+EAA+E;AAAA,EAChF,EAAE,KAAK,GAAG,IAAI;AAEd,MAAI,WAAW;AAAA,IACd,UAAU;AAAA,MACT,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,OAAO,CAAC,mBAAmB,iBAAiB,cAAc;AAAA,MAC1D,QAAQA,OAAM,UAAU;AAAA,IACzB;AAAA,EACD;AAOA,WAAS,OAAO,QAAQ,OAAO;AAC9B,WAAO,OAAO,OAAO,QAAQ,SAAS,WAAY;AAAE,aAAO;AAAA,IAAI,CAAC,GAAG,KAAK;AAAA,EACzE;AAEA,EAAAA,OAAM,UAAU,MAAM;AAAA,IACrB,WAAW;AAAA,MACV,SAAS;AAAA,MACT,QAAQ;AAAA,IACT;AAAA,IACA,cAAc;AAAA,MACb,SAAS,OAAO,+CAA+C,QAAQ,GAAG;AAAA,MAC1E,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,QAAQ;AAAA,IACT;AAAA,IACA,cAAc;AAAA,MACb,SAAS,OAAO,oBAAoB,MAAM;AAAA,MAC1C,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,QAAQ;AAAA,IACT;AAAA,IACA,aAAa;AAAA,MACZ,SAAS,OAAO,qCAAqC,MAAM;AAAA,MAC3D,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,QAAQ;AAAA,IACT;AAAA,IACA,WAAW;AAAA,IACX,iBAAiB;AAAA,MAChB,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,OAAO;AAAA,IACR;AAAA,IACA,QAAQ;AAAA,MACP,SAAS,OAAO,+BAA+B,MAAM;AAAA,MACrD,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,QAAQ;AAAA,IACT;AAAA,IACA,YAAY;AAAA,IACZ,eAAe;AAAA,EAChB;AAEA,EAAAA,OAAM,UAAU,KAAKA,OAAM,UAAU;AAEtC,GAAE,KAAK;",
  "names": ["Prism"]
}
