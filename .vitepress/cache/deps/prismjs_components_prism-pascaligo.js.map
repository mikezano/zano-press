{
  "version": 3,
  "sources": ["../../../node_modules/prismjs/components/prism-pascaligo.js"],
  "sourcesContent": ["(function (Prism) {\n\n\t// Pascaligo is a layer 2 smart contract language for the tezos blockchain\n\n\tvar braces = /\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\)/.source;\n\tvar type = /(?:\\b\\w+(?:<braces>)?|<braces>)/.source.replace(/<braces>/g, function () { return braces; });\n\n\tvar pascaligo = Prism.languages.pascaligo = {\n\t\t'comment': /\\(\\*[\\s\\S]+?\\*\\)|\\/\\/.*/,\n\t\t'string': {\n\t\t\tpattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\^[a-z]/i,\n\t\t\tgreedy: true\n\t\t},\n\t\t'class-name': [\n\t\t\t{\n\t\t\t\tpattern: RegExp(/(\\btype\\s+\\w+\\s+is\\s+)<type>/.source.replace(/<type>/g, function () { return type; }), 'i'),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: RegExp(/<type>(?=\\s+is\\b)/.source.replace(/<type>/g, function () { return type; }), 'i'),\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: RegExp(/(:\\s*)<type>/.source.replace(/<type>/g, function () { return type; })),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: null // see below\n\t\t\t}\n\t\t],\n\t\t'keyword': {\n\t\t\tpattern: /(^|[^&])\\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\\b/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'boolean': {\n\t\t\tpattern: /(^|[^&])\\b(?:False|True)\\b/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'builtin': {\n\t\t\tpattern: /(^|[^&])\\b(?:bool|int|list|map|nat|record|string|unit)\\b/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'function': /\\b\\w+(?=\\s*\\()/,\n\t\t'number': [\n\t\t\t// Hexadecimal, octal and binary\n\t\t\t/%[01]+|&[0-7]+|\\$[a-f\\d]+/i,\n\t\t\t// Decimal\n\t\t\t/\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?(?:mtz|n)?/i\n\t\t],\n\t\t'operator': /->|=\\/=|\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=|]|\\b(?:and|mod|or)\\b/,\n\t\t'punctuation': /\\(\\.|\\.\\)|[()\\[\\]:;,.{}]/\n\t};\n\n\tvar classNameInside = ['comment', 'keyword', 'builtin', 'operator', 'punctuation'].reduce(function (accum, key) {\n\t\taccum[key] = pascaligo[key];\n\t\treturn accum;\n\t}, {});\n\n\tpascaligo['class-name'].forEach(function (p) {\n\t\tp.inside = classNameInside;\n\t});\n\n}(Prism));\n"],
  "mappings": ";CAAC,SAAUA,QAAO;AAIjB,MAAI,SAAS,2CAA2C;AACxD,MAAI,OAAO,kCAAkC,OAAO,QAAQ,aAAa,WAAY;AAAE,WAAO;AAAA,EAAQ,CAAC;AAEvG,MAAI,YAAYA,OAAM,UAAU,YAAY;AAAA,IAC3C,WAAW;AAAA,IACX,UAAU;AAAA,MACT,SAAS;AAAA,MACT,QAAQ;AAAA,IACT;AAAA,IACA,cAAc;AAAA,MACb;AAAA,QACC,SAAS,OAAO,+BAA+B,OAAO,QAAQ,WAAW,WAAY;AAAE,iBAAO;AAAA,QAAM,CAAC,GAAG,GAAG;AAAA,QAC3G,YAAY;AAAA,QACZ,QAAQ;AAAA;AAAA,MACT;AAAA,MACA;AAAA,QACC,SAAS,OAAO,oBAAoB,OAAO,QAAQ,WAAW,WAAY;AAAE,iBAAO;AAAA,QAAM,CAAC,GAAG,GAAG;AAAA,QAChG,QAAQ;AAAA;AAAA,MACT;AAAA,MACA;AAAA,QACC,SAAS,OAAO,eAAe,OAAO,QAAQ,WAAW,WAAY;AAAE,iBAAO;AAAA,QAAM,CAAC,CAAC;AAAA,QACtF,YAAY;AAAA,QACZ,QAAQ;AAAA;AAAA,MACT;AAAA,IACD;AAAA,IACA,WAAW;AAAA,MACV,SAAS;AAAA,MACT,YAAY;AAAA,IACb;AAAA,IACA,WAAW;AAAA,MACV,SAAS;AAAA,MACT,YAAY;AAAA,IACb;AAAA,IACA,WAAW;AAAA,MACV,SAAS;AAAA,MACT,YAAY;AAAA,IACb;AAAA,IACA,YAAY;AAAA,IACZ,UAAU;AAAA;AAAA,MAET;AAAA;AAAA,MAEA;AAAA,IACD;AAAA,IACA,YAAY;AAAA,IACZ,eAAe;AAAA,EAChB;AAEA,MAAI,kBAAkB,CAAC,WAAW,WAAW,WAAW,YAAY,aAAa,EAAE,OAAO,SAAU,OAAO,KAAK;AAC/G,UAAM,GAAG,IAAI,UAAU,GAAG;AAC1B,WAAO;AAAA,EACR,GAAG,CAAC,CAAC;AAEL,YAAU,YAAY,EAAE,QAAQ,SAAU,GAAG;AAC5C,MAAE,SAAS;AAAA,EACZ,CAAC;AAEF,GAAE,KAAK;",
  "names": ["Prism"]
}
