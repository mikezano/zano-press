{
  "version": 3,
  "sources": ["../../../node_modules/prismjs/components/prism-smarty.js"],
  "sourcesContent": ["(function (Prism) {\n\n\tPrism.languages.smarty = {\n\t\t'comment': {\n\t\t\tpattern: /^\\{\\*[\\s\\S]*?\\*\\}/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'embedded-php': {\n\t\t\tpattern: /^\\{php\\}[\\s\\S]*?\\{\\/php\\}/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'smarty': {\n\t\t\t\t\tpattern: /^\\{php\\}|\\{\\/php\\}$/,\n\t\t\t\t\tinside: null // see below\n\t\t\t\t},\n\t\t\t\t'php': {\n\t\t\t\t\tpattern: /[\\s\\S]+/,\n\t\t\t\t\talias: 'language-php',\n\t\t\t\t\tinside: Prism.languages.php\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'string': [\n\t\t\t{\n\t\t\t\tpattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation': {\n\t\t\t\t\t\tpattern: /\\{[^{}]*\\}|`[^`]*`/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\t\t\tpattern: /^[{`]|[`}]$/,\n\t\t\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'expression': {\n\t\t\t\t\t\t\t\tpattern: /[\\s\\S]+/,\n\t\t\t\t\t\t\t\tinside: null // see below\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'variable': /\\$\\w+/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t],\n\t\t'keyword': {\n\t\t\tpattern: /(^\\{\\/?)[a-z_]\\w*\\b(?!\\()/i,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t'delimiter': {\n\t\t\tpattern: /^\\{\\/?|\\}$/,\n\t\t\tgreedy: true,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'number': /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n\t\t'variable': [\n\t\t\t/\\$(?!\\d)\\w+/,\n\t\t\t/#(?!\\d)\\w+#/,\n\t\t\t{\n\t\t\t\tpattern: /(\\.|->|\\w\\s*=)(?!\\d)\\w+\\b(?!\\()/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'function': {\n\t\t\tpattern: /(\\|\\s*)@?[a-z_]\\w*|\\b[a-z_]\\w*(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'attr-name': /\\b[a-z_]\\w*(?=\\s*=)/i,\n\t\t'boolean': /\\b(?:false|no|off|on|true|yes)\\b/,\n\t\t'punctuation': /[\\[\\](){}.,:`]|->/,\n\t\t'operator': [\n\t\t\t/[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,\n\t\t\t/\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,\n\t\t\t/\\b(?:and|eq|gt?e|gt|lt?e|lt|mod|neq?|not|or)\\b/\n\t\t]\n\t};\n\n\tPrism.languages.smarty['embedded-php'].inside.smarty.inside = Prism.languages.smarty;\n\tPrism.languages.smarty.string[0].inside.interpolation.inside.expression.inside = Prism.languages.smarty;\n\n\tvar string = /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/;\n\tvar smartyPattern = RegExp(\n\t\t// comments\n\t\t/\\{\\*[\\s\\S]*?\\*\\}/.source +\n\t\t'|' +\n\t\t// php tags\n\t\t/\\{php\\}[\\s\\S]*?\\{\\/php\\}/.source +\n\t\t'|' +\n\t\t// smarty blocks\n\t\t/\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>)*\\})*\\})*\\}/.source\n\t\t\t.replace(/<str>/g, function () { return string.source; }),\n\t\t'g'\n\t);\n\n\t// Tokenize all inline Smarty expressions\n\tPrism.hooks.add('before-tokenize', function (env) {\n\t\tvar smartyLiteralStart = '{literal}';\n\t\tvar smartyLiteralEnd = '{/literal}';\n\t\tvar smartyLiteralMode = false;\n\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'smarty', smartyPattern, function (match) {\n\t\t\t// Smarty tags inside {literal} block are ignored\n\t\t\tif (match === smartyLiteralEnd) {\n\t\t\t\tsmartyLiteralMode = false;\n\t\t\t}\n\n\t\t\tif (!smartyLiteralMode) {\n\t\t\t\tif (match === smartyLiteralStart) {\n\t\t\t\t\tsmartyLiteralMode = true;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t});\n\n\t// Re-insert the tokens after tokenizing\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty');\n\t});\n\n}(Prism));\n"],
  "mappings": ";CAAC,SAAUA,QAAO;AAEjB,EAAAA,OAAM,UAAU,SAAS;AAAA,IACxB,WAAW;AAAA,MACV,SAAS;AAAA,MACT,QAAQ;AAAA,IACT;AAAA,IACA,gBAAgB;AAAA,MACf,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,QAAQ;AAAA,QACP,UAAU;AAAA,UACT,SAAS;AAAA,UACT,QAAQ;AAAA;AAAA,QACT;AAAA,QACA,OAAO;AAAA,UACN,SAAS;AAAA,UACT,OAAO;AAAA,UACP,QAAQA,OAAM,UAAU;AAAA,QACzB;AAAA,MACD;AAAA,IACD;AAAA,IACA,UAAU;AAAA,MACT;AAAA,QACC,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,QAAQ;AAAA,UACP,iBAAiB;AAAA,YAChB,SAAS;AAAA,YACT,QAAQ;AAAA,cACP,6BAA6B;AAAA,gBAC5B,SAAS;AAAA,gBACT,OAAO;AAAA,cACR;AAAA,cACA,cAAc;AAAA,gBACb,SAAS;AAAA,gBACT,QAAQ;AAAA;AAAA,cACT;AAAA,YACD;AAAA,UACD;AAAA,UACA,YAAY;AAAA,QACb;AAAA,MACD;AAAA,MACA;AAAA,QACC,SAAS;AAAA,QACT,QAAQ;AAAA,MACT;AAAA,IACD;AAAA,IACA,WAAW;AAAA,MACV,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,IACT;AAAA,IACA,aAAa;AAAA,MACZ,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,OAAO;AAAA,IACR;AAAA,IACA,UAAU;AAAA,IACV,YAAY;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,QACC,SAAS;AAAA,QACT,YAAY;AAAA,MACb;AAAA,MACA;AAAA,QACC,SAAS;AAAA,QACT,YAAY;AAAA,MACb;AAAA,IACD;AAAA,IACA,YAAY;AAAA,MACX,SAAS;AAAA,MACT,YAAY;AAAA,IACb;AAAA,IACA,aAAa;AAAA,IACb,WAAW;AAAA,IACX,eAAe;AAAA,IACf,YAAY;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAEA,EAAAA,OAAM,UAAU,OAAO,cAAc,EAAE,OAAO,OAAO,SAASA,OAAM,UAAU;AAC9E,EAAAA,OAAM,UAAU,OAAO,OAAO,CAAC,EAAE,OAAO,cAAc,OAAO,WAAW,SAASA,OAAM,UAAU;AAEjG,MAAI,SAAS;AACb,MAAI,gBAAgB;AAAA;AAAA,IAEnB,mBAAmB,SACnB;AAAA,IAEA,2BAA2B,SAC3B;AAAA,IAEA,uEAAuE,OACrE,QAAQ,UAAU,WAAY;AAAE,aAAO,OAAO;AAAA,IAAQ,CAAC;AAAA,IACzD;AAAA,EACD;AAGA,EAAAA,OAAM,MAAM,IAAI,mBAAmB,SAAU,KAAK;AACjD,QAAI,qBAAqB;AACzB,QAAI,mBAAmB;AACvB,QAAI,oBAAoB;AAExB,IAAAA,OAAM,UAAU,mBAAmB,EAAE,kBAAkB,KAAK,UAAU,eAAe,SAAU,OAAO;AAErG,UAAI,UAAU,kBAAkB;AAC/B,4BAAoB;AAAA,MACrB;AAEA,UAAI,CAAC,mBAAmB;AACvB,YAAI,UAAU,oBAAoB;AACjC,8BAAoB;AAAA,QACrB;AAEA,eAAO;AAAA,MACR;AACA,aAAO;AAAA,IACR,CAAC;AAAA,EACF,CAAC;AAGD,EAAAA,OAAM,MAAM,IAAI,kBAAkB,SAAU,KAAK;AAChD,IAAAA,OAAM,UAAU,mBAAmB,EAAE,qBAAqB,KAAK,QAAQ;AAAA,EACxE,CAAC;AAEF,GAAE,KAAK;",
  "names": ["Prism"]
}
