{
  "version": 3,
  "sources": ["../../../node_modules/prismjs/components/prism-reason.js"],
  "sourcesContent": ["Prism.languages.reason = Prism.languages.extend('clike', {\n\t'string': {\n\t\tpattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n\t\tgreedy: true\n\t},\n\t// 'class-name' must be matched *after* 'constructor' defined below\n\t'class-name': /\\b[A-Z]\\w*/,\n\t'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n\t'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n});\nPrism.languages.insertBefore('reason', 'class-name', {\n\t'char': {\n\t\tpattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n\t\tgreedy: true\n\t},\n\t// Negative look-ahead prevents from matching things like String.capitalize\n\t'constructor': /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n\t'label': {\n\t\tpattern: /\\b[a-z]\\w*(?=::)/,\n\t\talias: 'symbol'\n\t}\n});\n\n// We can't match functions property, so let's not even try.\ndelete Prism.languages.reason.function;\n"],
  "mappings": ";AAAA,MAAM,UAAU,SAAS,MAAM,UAAU,OAAO,SAAS;AAAA,EACxD,UAAU;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,EACT;AAAA;AAAA,EAEA,cAAc;AAAA,EACd,WAAW;AAAA,EACX,YAAY;AACb,CAAC;AACD,MAAM,UAAU,aAAa,UAAU,cAAc;AAAA,EACpD,QAAQ;AAAA,IACP,SAAS;AAAA,IACT,QAAQ;AAAA,EACT;AAAA;AAAA,EAEA,eAAe;AAAA,EACf,SAAS;AAAA,IACR,SAAS;AAAA,IACT,OAAO;AAAA,EACR;AACD,CAAC;AAGD,OAAO,MAAM,UAAU,OAAO;",
  "names": []
}
