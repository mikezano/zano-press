{
  "version": 3,
  "sources": ["../../../node_modules/prismjs/components/prism-javadoclike.js"],
  "sourcesContent": ["(function (Prism) {\n\n\tvar javaDocLike = Prism.languages.javadoclike = {\n\t\t'parameter': {\n\t\t\tpattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:arg|arguments|param)\\s+)\\w+/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'keyword': {\n\t\t\t// keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\n\t\t\t// @word, {@word}\n\t\t\tpattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[{}]/\n\t};\n\n\n\t/**\n\t * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\n\t *\n\t * @param {string} lang the language add doc comment support to.\n\t * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\n\t */\n\tfunction docCommentSupport(lang, callback) {\n\t\tvar tokenName = 'doc-comment';\n\n\t\tvar grammar = Prism.languages[lang];\n\t\tif (!grammar) {\n\t\t\treturn;\n\t\t}\n\t\tvar token = grammar[tokenName];\n\n\t\tif (!token) {\n\t\t\t// add doc comment: /** */\n\t\t\tvar definition = {};\n\t\t\tdefinition[tokenName] = {\n\t\t\t\tpattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'comment'\n\t\t\t};\n\n\t\t\tgrammar = Prism.languages.insertBefore(lang, 'comment', definition);\n\t\t\ttoken = grammar[tokenName];\n\t\t}\n\n\t\tif (token instanceof RegExp) { // convert regex to object\n\t\t\ttoken = grammar[tokenName] = { pattern: token };\n\t\t}\n\n\t\tif (Array.isArray(token)) {\n\t\t\tfor (var i = 0, l = token.length; i < l; i++) {\n\t\t\t\tif (token[i] instanceof RegExp) {\n\t\t\t\t\ttoken[i] = { pattern: token[i] };\n\t\t\t\t}\n\t\t\t\tcallback(token[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tcallback(token);\n\t\t}\n\t}\n\n\t/**\n\t * Adds doc-comment support to the given languages for the given documentation language.\n\t *\n\t * @param {string[]|string} languages\n\t * @param {Object} docLanguage\n\t */\n\tfunction addSupport(languages, docLanguage) {\n\t\tif (typeof languages === 'string') {\n\t\t\tlanguages = [languages];\n\t\t}\n\n\t\tlanguages.forEach(function (lang) {\n\t\t\tdocCommentSupport(lang, function (pattern) {\n\t\t\t\tif (!pattern.inside) {\n\t\t\t\t\tpattern.inside = {};\n\t\t\t\t}\n\t\t\t\tpattern.inside.rest = docLanguage;\n\t\t\t});\n\t\t});\n\t}\n\n\tObject.defineProperty(javaDocLike, 'addSupport', { value: addSupport });\n\n\tjavaDocLike.addSupport(['java', 'javascript', 'php'], javaDocLike);\n\n}(Prism));\n"],
  "mappings": ";CAAC,SAAUA,QAAO;AAEjB,MAAI,cAAcA,OAAM,UAAU,cAAc;AAAA,IAC/C,aAAa;AAAA,MACZ,SAAS;AAAA,MACT,YAAY;AAAA,IACb;AAAA,IACA,WAAW;AAAA;AAAA;AAAA,MAGV,SAAS;AAAA,MACT,YAAY;AAAA,IACb;AAAA,IACA,eAAe;AAAA,EAChB;AASA,WAAS,kBAAkB,MAAM,UAAU;AAC1C,QAAI,YAAY;AAEhB,QAAI,UAAUA,OAAM,UAAU,IAAI;AAClC,QAAI,CAAC,SAAS;AACb;AAAA,IACD;AACA,QAAI,QAAQ,QAAQ,SAAS;AAE7B,QAAI,CAAC,OAAO;AAEX,UAAI,aAAa,CAAC;AAClB,iBAAW,SAAS,IAAI;AAAA,QACvB,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,OAAO;AAAA,MACR;AAEA,gBAAUA,OAAM,UAAU,aAAa,MAAM,WAAW,UAAU;AAClE,cAAQ,QAAQ,SAAS;AAAA,IAC1B;AAEA,QAAI,iBAAiB,QAAQ;AAC5B,cAAQ,QAAQ,SAAS,IAAI,EAAE,SAAS,MAAM;AAAA,IAC/C;AAEA,QAAI,MAAM,QAAQ,KAAK,GAAG;AACzB,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,IAAI,GAAG,KAAK;AAC7C,YAAI,MAAM,CAAC,aAAa,QAAQ;AAC/B,gBAAM,CAAC,IAAI,EAAE,SAAS,MAAM,CAAC,EAAE;AAAA,QAChC;AACA,iBAAS,MAAM,CAAC,CAAC;AAAA,MAClB;AAAA,IACD,OAAO;AACN,eAAS,KAAK;AAAA,IACf;AAAA,EACD;AAQA,WAAS,WAAW,WAAW,aAAa;AAC3C,QAAI,OAAO,cAAc,UAAU;AAClC,kBAAY,CAAC,SAAS;AAAA,IACvB;AAEA,cAAU,QAAQ,SAAU,MAAM;AACjC,wBAAkB,MAAM,SAAU,SAAS;AAC1C,YAAI,CAAC,QAAQ,QAAQ;AACpB,kBAAQ,SAAS,CAAC;AAAA,QACnB;AACA,gBAAQ,OAAO,OAAO;AAAA,MACvB,CAAC;AAAA,IACF,CAAC;AAAA,EACF;AAEA,SAAO,eAAe,aAAa,cAAc,EAAE,OAAO,WAAW,CAAC;AAEtE,cAAY,WAAW,CAAC,QAAQ,cAAc,KAAK,GAAG,WAAW;AAElE,GAAE,KAAK;",
  "names": ["Prism"]
}
