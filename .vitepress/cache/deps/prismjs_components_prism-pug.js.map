{
  "version": 3,
  "sources": ["../../../node_modules/prismjs/components/prism-pug.js"],
  "sourcesContent": ["(function (Prism) {\n\t// TODO:\n\t// - Add CSS highlighting inside <style> tags\n\t// - Add support for multi-line code blocks\n\t// - Add support for interpolation #{} and !{}\n\t// - Add support for tag interpolation #[]\n\t// - Add explicit support for plain text using |\n\t// - Add support for markup embedded in plain text\n\n\tPrism.languages.pug = {\n\n\t\t// Multiline stuff should appear before the rest\n\n\t\t// This handles both single-line and multi-line comments\n\t\t'comment': {\n\t\t\tpattern: /(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/m,\n\t\t\tlookbehind: true\n\t\t},\n\n\t\t// All the tag-related part is in lookbehind\n\t\t// so that it can be highlighted by the \"tag\" pattern\n\t\t'multiline-script': {\n\t\t\tpattern: /(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\n\t\t// See at the end of the file for known filters\n\t\t'filter': {\n\t\t\tpattern: /(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'filter-name': {\n\t\t\t\t\tpattern: /^:[\\w-]+/,\n\t\t\t\t\talias: 'variable'\n\t\t\t\t},\n\t\t\t\t'text': /\\S[\\s\\S]*/,\n\t\t\t}\n\t\t},\n\n\t\t'multiline-plain-text': {\n\t\t\tpattern: /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'markup': {\n\t\t\tpattern: /(^[\\t ]*)<.+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.markup\n\t\t},\n\t\t'doctype': {\n\t\t\tpattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n\t\t\tlookbehind: true\n\t\t},\n\n\t\t// This handle all conditional and loop keywords\n\t\t'flow-control': {\n\t\t\tpattern: /(^[\\t ]*)(?:case|default|each|else|if|unless|when|while)\\b(?: .+)?/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'each': {\n\t\t\t\t\tpattern: /^each .+? in\\b/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'keyword': /\\b(?:each|in)\\b/,\n\t\t\t\t\t\t'punctuation': /,/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'branch': {\n\t\t\t\t\tpattern: /^(?:case|default|else|if|unless|when|while)\\b/,\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.javascript\n\t\t\t}\n\t\t},\n\t\t'keyword': {\n\t\t\tpattern: /(^[\\t ]*)(?:append|block|extends|include|prepend)\\b.+/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'mixin': [\n\t\t\t// Declaration\n\t\t\t{\n\t\t\t\tpattern: /(^[\\t ]*)mixin .+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^mixin/,\n\t\t\t\t\t'function': /\\w+(?=\\s*\\(|\\s*$)/,\n\t\t\t\t\t'punctuation': /[(),.]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Usage\n\t\t\t{\n\t\t\t\tpattern: /(^[\\t ]*)\\+.+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'name': {\n\t\t\t\t\t\tpattern: /^\\+\\w+/,\n\t\t\t\t\t\talias: 'function'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'script': {\n\t\t\tpattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]).+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\n\t\t'plain-text': {\n\t\t\tpattern: /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]).+/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'tag': {\n\t\t\tpattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attributes': [\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /&[^(]+\\([^)]+\\)/,\n\t\t\t\t\t\tinside: Prism.languages.javascript\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /\\([^)]+\\)/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\t\t\tpattern: /(=\\s*(?!\\s))(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n\t\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\t\tinside: Prism.languages.javascript\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n\t\t\t\t\t\t\t'punctuation': /[!=(),]+/\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t'punctuation': /:/,\n\t\t\t\t'attr-id': /#[\\w\\-]+/,\n\t\t\t\t'attr-class': /\\.[\\w\\-]+/\n\t\t\t}\n\t\t},\n\t\t'code': [\n\t\t\t{\n\t\t\t\tpattern: /(^[\\t ]*(?:-|!?=)).+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: Prism.languages.javascript\n\t\t\t}\n\t\t],\n\t\t'punctuation': /[.\\-!=|]+/\n\t};\n\n\tvar filter_pattern = /(^([\\t ]*)):<filter_name>(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/.source;\n\n\t// Non exhaustive list of available filters and associated languages\n\tvar filters = [\n\t\t{ filter: 'atpl', language: 'twig' },\n\t\t{ filter: 'coffee', language: 'coffeescript' },\n\t\t'ejs',\n\t\t'handlebars',\n\t\t'less',\n\t\t'livescript',\n\t\t'markdown',\n\t\t{ filter: 'sass', language: 'scss' },\n\t\t'stylus'\n\t];\n\tvar all_filters = {};\n\tfor (var i = 0, l = filters.length; i < l; i++) {\n\t\tvar filter = filters[i];\n\t\tfilter = typeof filter === 'string' ? { filter: filter, language: filter } : filter;\n\t\tif (Prism.languages[filter.language]) {\n\t\t\tall_filters['filter-' + filter.filter] = {\n\t\t\t\tpattern: RegExp(filter_pattern.replace('<filter_name>', function () { return filter.filter; }), 'm'),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'filter-name': {\n\t\t\t\t\t\tpattern: /^:[\\w-]+/,\n\t\t\t\t\t\talias: 'variable'\n\t\t\t\t\t},\n\t\t\t\t\t'text': {\n\t\t\t\t\t\tpattern: /\\S[\\s\\S]*/,\n\t\t\t\t\t\talias: [filter.language, 'language-' + filter.language],\n\t\t\t\t\t\tinside: Prism.languages[filter.language]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tPrism.languages.insertBefore('pug', 'filter', all_filters);\n\n}(Prism));\n"],
  "mappings": "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",
  "names": ["Prism"]
}
